library(Rcpp)
cppFunction('int add(int x, int y, int z) {
int sum = x + y + z;
return sum;}')
add
cppFunction('bool all_equal(NumericVector x) {
double precision = as<double>(y);
for (int i = 0, size = var.size(); i < size; ++i) {
if (var[i] - var[0] > precision || var[0] - var[i] > precision)
return false;
}
return true;
}')
cppFunction('bool all_equal(NumericVector x) {
double precision = as<double>(y);
for (int i = 0, size = x.size(); i < size; ++i) {
if (x[i] - x[0] > precision || x[0] - x[i] > precision)
return false;
}
return true;
}')
cppFunction('bool all_equal(NumericVector x, numeric y) {
double precision = as<double>(y);
for (int i = 0, size = x.size(); i < size; ++i) {
if (x[i] - x[0] > precision || x[0] - x[i] > precision)
return false;
}
return true;
}')
cppFunction('bool all_equal(NumericVector x, double y) {
double precision = as<double>(y);
for (int i = 0, size = x.size(); i < size; ++i) {
if (x[i] - x[0] > precision || x[0] - x[i] > precision)
return false;
}
return true;
}')
cppFunction('bool all_equal(NumericVector x, double y) {
for (int i = 0, size = x.size(); i < size; ++i) {
if (x[i] - x[0] > y || x[0] - x[i] > y)
return false;
}
return true;
}')
all_equal(c(1, 1, 1, 1, 1), 0.0001)
?Rcpp::wrap
library(data.table)
x <- data.table(github_user = rep('nicholaelaw', 4L), github_email = c('nicholaelaw-MBP', 'LIFAN-RM', 'aliyun', 'nicholaelaw-PC'))
x
fwrite(x, file = './github_users.csv')
library(assertthat)
?is.readable
devtools::document()
devtools::document()\
devtools::document()
library(LFUtility)
getGHUserList('./github_users.csv')
getGHUserList('../LFTestFacility/github_users.csv')
x ,- getGHUserList('../LFTestFacility/github_users.csv')
x <- getGHUserList('../LFTestFacility/github_users.csv')
x
?file.path
?add_github_user
file.path('./data')
file.path('./data', 'user.csv')
devtools::document()
Rcpp::compileAttributes()
devtools::document()
vignette("Rcpp-package")
Rcpp::compileAttributes()
Rcpp::compileAttributes(pkgdir = '.')
cat(system.file( 'lib', 'Rcpp.h', package = 'Rcpp' ))
Rcpp::Rcpp.package.skeleton()
Rcpp::compileAttributes()
devtools::document()
Rcpp::Rcpp.package.skeleton()
Rcpp::compileAttributes()
devtools::document()
file.path('~/.Rprofile')
source(file.path('~/.Rprofile'))
getOption('reops')
getOption('repos')
getOption('java.parameters')
devtools::setup_rtools()
Sys.getenv('PATH')
devtools::setup_rtools()
Sys.getenv('PATH')
devtools::setup_rtools()
system('g++ -v')
devtools::document()
library(inline)
library(Rcpp)
fast_equal = cxxfunction(signature(x = 'numeric', y = 'numeric'), '
NumericVector var(x);
double precision = as<double>(y);
for (int i = 0, size = var.size(); i < size; ++i) {
if (var[i] - var[0] > precision || var[0] - var[i] > precision)
return Rcpp::wrap(false);
}
return Rcpp::wrap(true);
', plugin = 'Rcpp')
install.packages(c("callr", "lubridate"))
devtools::document()
update.packages('devtools')
devtools::document()
devtools::find_rtools()
Sys.getenv('BINPREF')
Sys.getenv('PATH')
devtools::document()
devtools::document()\
devtools::document()
paste(normalizePath('c:/Rtools/bin'), Sys.getenv('PATH'), sep = ';')
devtools::document(\)
devtools::document()
